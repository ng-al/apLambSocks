!function(){"use strict";angular.module("apLambSocks",["apLamb","apSock"]),angular.module("apLambSocks").run(["lambSocks",function(a){}])}(),function(){"use strict";function a(a,b){this.data=b,this.publishDateTime=new Date,this.topic=a}function b(a,b,c){this.history=[],this.lambMessages=[],this.receivedData=c,this.receivedDateTime=new Date,this.receivedTopic=b,this.sock=a}function c(a,b,c){this.identity=a,this.fn=c,this.priority=b}function d(a,b,c,d){this.lambMessage=d,this.transformDateTime=c,this.transformIdentity=a,this.transformPriority=b}function e(a,b,c){this.id=b,this.pattern=a,this.sock=c,this.toString=function(){return JSON.stringify(this,function(a,b){return"pattern"===a?b.toString():b})}}var f=100,g="BLEAT",h="lambSocks";angular.module("apLambSocks").factory(h,["$log","$q","$rootScope","Lamb","lambConfigService","sockService",function(i,j,k,l,m,n){function o(a){a=a||0;var b,c,d;if(d=m.getSocks(),angular.isArray(d)){if(a>=d.length)throw new Error("getSock: index out of range.");b=d[a],c=new Sock(b.protocol,b.host,b.port,b.channel)}return c=c||new n.Sock,c.channel||(c.channel=g),c}function p(a){if(!a)throw new Error("getTransformById: id is required.");if(!angular.isNumber)throw new Error("getTransformById: id is not a number.");var b=q({id:a});return 1===b.length?b[0]:null}function q(a,b){if(b=b||"getTransformsByCriteria",!a)throw new Error(b+": criteria(object) is required.");if(!(a.host||a.port||a.channel||a.id||a.pattern))throw new Error(b+": criteria object malformed.");var c,d,e,f=[];if(!A)return f;for(c=0;c<A.length;++c)e=A[c],d=!0,a.host&&e.identity.sock&&a.host!==e.identity.sock.host&&(d=!1),a.port&&e.identity.port&&a.port!==e.identity.sock.port&&(d=!1),a.channel&&e.identity.channel&&a.channel!==e.identity.sock.channel&&(d=!1),a.id&&a.id!==e.identity.id&&(d=!1),a.pattern&&!t(a.pattern,e.identity.pattern)&&(d=!1),d&&f.push(e);return f}function r(){var a=o();n.initializeSocketIo(a).then(function(){v()})}function s(c,e){var f,g,h,l,n,o,p,r,s=[],t=function(a){return a?angular.isObject(a)&&a.topic&&a.data:!0};if(!e.topic||!e.data)throw new Error("lambSocks: received malformed message from server");if(h=new b(c,e.topic,e.data),m.getLogLevel()!==m.LogLevelEnum.NONE&&i.debug("lambSocks: received "+h.receivedDateTime.toISOString()+JSON.stringify(e)),p=q({host:c.host,port:c.port,channel:c.channel}),0!==p.length){for(f=0;f<p.length;++f)l=p[f],l.identity.pattern.test(h.receivedTopic)&&s.push(l);for(r=s.sort(function(a,b){return b.priority-a.priority}),f=0;f<r.length;++f){l=r[f];try{o=l.fn(angular.copy(h))}catch(u){i("lambSocks: transformation threw exception "+l.identity.toString());break}if(!angular.isPromise(o)&&!t(o)){i("lambSocks: Transformation "+l.identity.toString()+" returned unrecognized result from transformation.");break}!function(b){var c;c=angular.isPromise(b.transformFnResult)?b.transformFnResult:j(function(a,c){return a(b.transformFnResult)}),c.then(function(c){if(n=new Date,!t(c))throw new Error("lambSocks: Transformation "+b.transform.identity.toString()+" returned unrecognized result from transformation promise.");g=c?new a(c.topic,c.data):null,g&&(k.$applyAsync(function(){z.publish(g.topic,g.data)}),h.lambMessages.push(g)),h.history.push(new d(b.transform.identity,b.transform.priority,n,g)),m.getLogLevel()!==m.LogLevelEnum.VERBOSE||g||i.info("lambSocks: transform "+b.transform.identity.toString()+" returned null message."),m.getLogLevel()===m.LogLevelEnum.NORMAL&&g&&i.debug("lambSocks: published "+b.transform.identity.toString()+" --> "+JSON.stringify(g))})}({transform:l,transformFnResult:o})}}}function t(a,b){return a instanceof RegExp&&b instanceof RegExp&&a.source===b.source&&a.global===b.global&&a.ignoreCase===b.ignoreCase&&a.multiline===b.multiline}function u(a,b){if(!a)throw new Error("registerTransform: pattern(RegExp) is required.");if(!(a instanceof RegExp))throw new Error("registerTransform: pattern is not RegExp.");if(!b)throw new Error("registerTransform: fn is required.");if(arguments.length>4)throw new Error("usage: registerTransform(pattern:RegExp, fn, [priority:number], [sock:object])");var d,g,h,j,k,l=f,n=null;for(d=2;d<arguments.length;++d)h=arguments[d],angular.isNumber(h)&&(l=h),angular.isObject(h)&&(n=h);return g=++B,k=new e(a,g,n),j=new c(k,l,b),A||(A=[]),A.push(j),m.getLogLevel()===m.LogLevelEnum.VERBOSE&&i.info("lambSocks: transform registered "+k.toString()),g}function v(){var a,b;for(b=m.getSocks(),b&&0!==b.length||(b=[o()]),a=0;a<b.length;++a)n.registerListener(b[a],s)}function w(a){var b,c,d,e,f=[],g=[];if(e=q(a,"unregisterTransformsByCriteria"),0===e.length)return!1;for(b=0;b<A.length;++b)for(d=!1,c=0;c<e.length;++c){if(A[b].identity.id===e.identity.id){d=!0,g.push(e[c]);break}d||f.push(A[b])}if(f.length===A.length)return!1;if(A=f,m.getLogLevel()===m.LogLevelEnum.VERBOSE)for(b=0;b<g.length;++b)i.info("lambSocks: transform unregistered "+g[b].identity.toString());return!0}function x(a){if(!a)throw new Error("unregisterTransformById: id is required.");if(!angular.isNumber(a))throw new Error("unregisterTransformById: id is not a number.");return w({id:a})}function y(a){if(!a)throw new Error("unregisterTransformByPattern: pattern is required.");if(!(a instanceof RegExp))throw new Error("unregisterTransformByPattern: pattern is not a RegExp.");return w({pattern:a})}var z=new l(h,k),A=null,B=0;return r(),{getTransformsByCriteria:q,getTransformById:p,registerTransform:u,unregisterTransformsByCriteria:w,unregisterTransformById:x,unregisterTransformsByPattern:y}}])}();